// This mixin is made to be applied to both ::before and ::after pseudo-components for
// correct sizing and placement of the replacement checkbox
@mixin checkbox-pseudo-base() {
  content: '';
  display: inline-block;
  position: absolute;

  left: 0;
  top: calc(var(--checkbox-size) * 0.175);

  border-radius: var(--checkbox-radius);

  width: var(--checkbox-size);
  height: var(--checkbox-size);
}

input[type=checkbox].checkbox {
  --checkbox-checked-bg: var(--scheme-main);
  --checkbox-checked-hover-bg: var(--scheme-main-hover);
  --checkbox-size: var(--space-s);
  --checkbox-radius: calc(var(--radius) * 0.5);
  --checkbox-cutout-start: var(--cutout-checkmark-start);
  --checkbox-cutout-end: var(--cutout-checkmark-end);

  width: var(--checkbox-size);
  height: var(--checkbox-size);

  appearance: none;

  position: relative;
  
  // Checkbox replacement
  &::before {
    @include checkbox-pseudo-base;

    user-select: none;

    background-color: var(--checkbox-unchecked-bg);

    clip-path: var(--checkbox-cutout-start);
    transition: var(--transition-duration) clip-path var(--transition-shape-bouncy),
                var(--transition-duration) background-color linear;

    @media (prefers-reduced-motion) {
      transition: none;
    }
  }
  // Applying cursor state on a separate element because the negative space inside the clip-path is invisible to the
  // cursor property leading to the cursor constantly changing
  &::after {
    @include checkbox-pseudo-base;
    cursor: pointer;
 }

  // Checked and hover states
  &:checked::before {
    background-color: var(--checkbox-checked-bg);
    clip-path: var(--checkbox-cutout-end);
  }
  &:hover::before {
    background-color: var(--checkbox-unchecked-hover-bg);
  }
  &:checked:hover::before {
    background-color: var(--checkbox-checked-hover-bg);
  }

  &:focus,
  &:focus-visible {
    outline: none;
  }

  &:focus-visible::after {
    outline-offset: var(--stroke);
    outline: var(--stroke) solid var(--scheme-focus);
  }

  & + label {
    padding-inline-start: 0.5ch;
    cursor: pointer;
  }

  // Variations

  &.input-check-cross {
    --checkbox-cutout-start: var(--cutout-cross-start);
    --checkbox-cutout-end: var(--cutout-cross-end);
  }
}